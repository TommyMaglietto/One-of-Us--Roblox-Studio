local RS = game:GetService("ReplicatedStorage")
local PPS = game:GetService("ProximityPromptService")
local TEMPLATE = RS:WaitForChild("PlankTemplate")
local TOOL_BASE = "Planks"

local function getCount(plr)
	local inv = plr:FindFirstChild("Inventory")
	return inv and inv:FindFirstChild("PlankCount")
end

local function updateToolNames(plr, newVal)
	local function upd(container)
		for _, t in ipairs(container:GetChildren()) do
			if t:IsA("Tool") and t.Name:match("^"..TOOL_BASE) then
				if newVal > 0 then t.Name = string.format("%s x%d", TOOL_BASE, newVal) else t:Destroy() end
			end
		end
	end
	local bp = plr:FindFirstChildOfClass("Backpack"); if bp then upd(bp) end
	local sg = plr:FindFirstChild("StarterGear");    if sg then upd(sg) end
end

local function snapCF(slot: BasePart)
	local a = slot:FindFirstChild("Snap")
	return (a and a:IsA("Attachment")) and a.WorldCFrame or slot.CFrame
end

PPS.PromptTriggered:Connect(function(prompt, plr)
	if prompt.Name ~= "PlacePlankHere" then return end
	local slot = prompt.Parent
	if not slot or not slot:IsA("BasePart") then return end
	if slot.Name ~= "PlankPlaceholder" then return end

	-- Check occupancy and inventory
	local occ = slot:FindFirstChild("Occupied"); if occ and occ.Value == true then return end
	local count = getCount(plr); if not count or count.Value <= 0 then return end

	-- Spawn placed plank
	local cf = snapCF(slot)
	local clone = TEMPLATE:Clone()
	if clone:IsA("BasePart") then
		clone.CFrame = cf; clone.Anchored = true; clone.CanCollide = true
	elseif clone:IsA("Model") then
		if not clone.PrimaryPart then
			for _, d in ipairs(clone:GetDescendants()) do if d:IsA("BasePart") then clone.PrimaryPart = d; break end end
		end
		if clone.PrimaryPart then clone:PivotTo(cf) end
	end

	local bridge = slot:FindFirstAncestor("Bridge")
	if bridge then clone.Parent = bridge else clone.Parent = workspace end

	count.Value -= 1
	updateToolNames(plr, count.Value)

	if not occ then occ = Instance.new("BoolValue"); occ.Name = "Occupied"; occ.Value = false; occ.Parent = slot end
	occ.Value = true
	slot:Destroy()
end)
